---
import {Image as AstroImage} from 'astro:assets';

export interface Props {
    src: string | ImageMetadata;
    alt: string;
    description: string;
    credit?: string;
    width?: number;
    height?: number;
    class?: string;
    loading?: "eager" | "lazy";
}

const {
    src,
    alt,
    description,
    credit,
    width,
    height,
    class: className = "",
    loading = "lazy"
} = Astro.props;

// Type guard to check if src is a string or ImageMetadata
const isRemoteImage = typeof src === 'string';

// If src is a string (remote image), we need to handle it differently
// as Astro's Image component requires width and height for remote images
const imageProps = isRemoteImage
    ? {src, width: width || 800, height: height || 600, alt}
    : {src, alt, width, height};
---

<div class="image-container">
    <figure class={`image-component ${className}`}>
        {isRemoteImage ? (
                <img
                        src={src}
                        alt={alt}
                        width={width}
                        height={height}
                        loading={loading}
                />
        ) : (
                <AstroImage
                    {...imageProps}
                    class="optimized-image"
                    loading={loading}
                    format="webp"
                    quality={80}
                />
        )}
        <figcaption>
            <p class="description"><em>{description}</em></p>
            {credit && <p class="credit">Source: {credit}</p>}
        </figcaption>
    </figure>
</div>

<style>
	.image-container {
		display: flex;
		justify-content: center;
		width: 100%;
		margin: 1.5rem 0;
	}

	.image-component {
		max-width: 100%;
		transition: transform 0.3s ease;
	}

	.image-component:hover {
		transform: scale(1.02);
	}

	/* Apply styles to both regular img and optimized-image */
	.image-component img,
	.image-component .optimized-image {
		max-width: 100%;
		height: auto;
		border-radius: 10px;
		border: 2px solid var(--secondary-text-color);
		box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
		transition: box-shadow 0.3s ease;
	}

	.image-component:hover img,
	.image-component:hover .optimized-image {
		box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.4);
	}

	.credit {
		font-size: 0.8rem;
		color: var(--secondary-text-color);
	}
</style>